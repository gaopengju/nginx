本文档摘录nginx中关于time的相关操作。

在nginx中时间可被信号或其他线程更新但更新操作属于少量操作，必须持有锁;
而读操作非常高频，不需要持有锁，直接从当前slot中读取。因此当读取操作被
抢占，并且重新调度的时间长于NGX_TIME_SLOTS秒时，读取的结果可能是corrupted
的(因为缓存时间的总量为NGX_TIME_SLOTS, 超过此秒后，缓存被覆写)。

<NOTE>
    1) ngx_gmtime()是nginx实现的gmtime()库函数，如果自己实现可参考;


1. ngx_time_init
10.全局数据结构
    ---slot
    ---cached_time[]


1. ngx_time_init()
    @file: ~/src/core/ngx_times.c
    @role: 缓存时间初始化, 更新cached_time[]及其他缓存时间字符数组

    --赋值ngx_cached_time           指向cached_time[0]
    --ngx_time_update()             更新cached_time[]
        --ngx_trylock()
        --ngx_gettimeofday()            获取Epoch秒, 计算并赋值
            --gettimeofday()                ngx_current_msec
        --更新slot++/cached_time[slot]
        --ngx_gmtime()                  获取对应的Broken-down时间格式
        --ngx_sprintf()                 初始化cached_http_time[]/
                                            cached_err_log_time[]/
                                            cached_http_log_time[]/
                                            cached_http_log_iso8601[]/
                                            cached_syslog_time[]
        --ngx_memory_barrier()
        --更新当前时间变量指针          ngx_cached_time/
                                        ngx_cached_http_time/
                                        ngx_cached_err_log_time/
                                        ngx_cached_http_log_time/
                                        ngx_cached_http_log_iso8601/
                                        ngx_cached_syslog_time
                                        只所以有这么多的事件缓存字符
                                        串，是因为各种情形要求的时间
                                        格式不一致
        --ngx_unlock()

10.全局数据结构
    10.1 slot
    @file: ~/src/core/ngx_times.c
    @role: 当前缓存时间的槽位索引

    static ngx_uint_t        slot;

    10.2 cached_time[]
    @file: ~/src/core/ngx_times.c
    @role: 当前缓存的时间

    static ngx_time_t        cached_time[NGX_TIME_SLOTS];
    typedef struct {
        time_t      sec;            Epoch秒
        ngx_uint_t  msec;           秒内的毫秒偏移
        ngx_int_t   gmtoff;         相对于UTC的时区偏移, 单位分钟
    } ngx_time_t;
