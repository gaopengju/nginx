#+TITLE: NGINX代码导读
#+AUTHOR: sqlfocus


* 入口
*文件* main():~/src/core/nginx.c

* 信号处理
*函数入口* =ngx_signal_process():~/src/os/unix/ngx_process.c=

对应命令行参数-s

* 时间缓存
*函数* ~ngx_time_init()~ : =~/src/core/ngx_times.c=

nginx中的时间以秒为粒度，被缓存起来，并形成丰富的字符串格式；此设计使得
少更新多读取的时间操作尤其高效。

缓存时间设定了定量的槽位，构成缓存循环队列；以免某些请求的处理时间大于s
的粒度，造成紊乱。

* 插口继承
*函数* =ngx_add_inherited_sockets()= :~/src/core/nginx.c

启动nginx时，可通过环境变量NGINX继承已有的socket插口

* 配置解析
  - 入口函数           :: =ngx_conf_parse():~/src/core/ngx_conf_file.c=
  - http{}入口函数     :: =ngx_http_block():~/src/http/ngx_http.c=
  - server{}入口函数   :: =ngx_http_core_server():~/src/http/ngx_http_core_module.c=
  - location{}入口函数 :: =ngx_http_core_location():~/src/http/ngx_http_core_module.c=

#+CAPTION: 四级指针视图
[[file:ngx_http_module-http{}.png]]

#+CAPTION: SERVER上下文视图
[[file:ngx_http_core_module-server{}.png]]

#+CAPTION: LOCATION上下文视图
[[file:ngx_http_core_module-location{}.png]]

#+CAPTION: location优化后视图
[[file:ngx_http_core_module-loc_conf-optimization.png]]

[[http://blog.csdn.net/xiaofei0859/article/details/51848897][参考网址]]

* 模块儿初始化流程
#+BEGIN_EXAMPLE
--main()                        入口，~/src/core/nginx.c
    --ngx_preinit_modules()         初始化ngx_modules[].index及模块儿名
    --ngx_init_cycle()              配置解析
        --ngx_cycle_modules()           创建模块儿的配置环境, 并初始化
        --ngx_modules[]->ctx->create_conf()  
                                        NGX_CORE_MODULE类型模块创建配置环境,ngx_cycle->conf_ctx[]
        --ngx_conf_parse()
            --ngx_conf_handler()            解析配置主入口，ngx_conf_file.c
                                            其中涉及模块儿配置信息结构的内存分配等
                -- 查找ngx_cycle_t->modules[]->commands[]
                   获取对应的处理命令
                -- 调用命令->set()
        --ngx_modules[]->ctx->init_conf()    
                                        未配置的项采用默认值
        --ngx_init_modules()            进一步初始化
    ---------------单进程模式---------------
    --ngx_single_process_cycle()
        --ngx_modules[]->init_process() 模块儿进程级初始化(所有)
    -----------master+worker模式------------
    --ngx_master_process_cycle()
        --ngx_start_worker_processes()
            --ngx_worker_process_cycle()
                --ngx_worker_process_init()
                    --ngx_modules[]->init_process()
#+END_EXAMPLE



